# !user/bin/python
# -*- coding: UTF-8 -*-

import pandas as pd
import numpy as np

df2 = pd.DataFrame({
    'A' : 1.0, # A这一列都是常数1.0
    'B' : pd.Timestamp('20190822'), # 将字符串转化为时间戳的形式
    'C' : pd.Series(1, index = range(0, 4), dtype = 'float32'), # 传入一个Series，index相当于一位数组的下标
    'D' : np.array([3] * 4, dtype = 'int32'), # 传入一个np数组
    'E' : 'foo' # 字符串常量
})

# 只查看前N行
print(df2.head(3))

# 只查看后N行
print(df2.tail(2))

# 查看行索引
print(df2.index)
# RangeIndex(start=0, stop=4, step=1)

# 查看列索引
print(df2.columns)
# Index(['A', 'B', 'C', 'D', 'E'], dtype='object')

# 查看表的二维数组
print(df2.values)
# [[1.0 Timestamp('2019-08-22 00:00:00') 1.0 3 'foo']
#  [1.0 Timestamp('2019-08-22 00:00:00') 1.0 3 'foo']
#  [1.0 Timestamp('2019-08-22 00:00:00') 1.0 3 'foo']
#  [1.0 Timestamp('2019-08-22 00:00:00') 1.0 3 'foo']]

# 对于变量类型为数字的那一列，进行统计描述
print(df2.describe())
#          A    C    D
# count  4.0  4.0  4.0
# mean   1.0  1.0  3.0
# std    0.0  0.0  0.0
# min    1.0  1.0  3.0
# 25%    1.0  1.0  3.0
# 50%    1.0  1.0  3.0
# 75%    1.0  1.0  3.0
# max    1.0  1.0  3.0

# 行列反向，注意这里并不是矩阵的转置，因为还是要保证行列内部的顺序的
df = pd.DataFrame(np.random.rand(7, 4), index = range(1, 8), columns = list('ABCD'))
print(df)
print(df.T)
#           A         B         C         D
# 1  0.360145  0.684189  0.360940  0.806845
# 2  0.307114  0.431382  0.138848  0.432021
# 3  0.765685  0.410285  0.811851  0.577066
# 4  0.369557  0.294396  0.527664  0.609447
# 5  0.597507  0.631212  0.998008  0.321583
# 6  0.619252  0.648246  0.168637  0.567262
# 7  0.683362  0.842839  0.700228  0.056795
#           1         2         3         4         5         6         7
# A  0.360145  0.307114  0.765685  0.369557  0.597507  0.619252  0.683362
# B  0.684189  0.431382  0.410285  0.294396  0.631212  0.648246  0.842839
# C  0.360940  0.138848  0.811851  0.527664  0.998008  0.168637  0.700228
# D  0.806845  0.432021  0.577066  0.609447  0.321583  0.567262  0.056795



